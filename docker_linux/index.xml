<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker et Linux on Docker et Orchestration</title><link>https://zaggash.github.io/tp-iut-docker/docker_linux/</link><description>Recent content in Docker et Linux on Docker et Orchestration</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><lastBuildDate>Sun, 14 Jun 2020 00:28:56 +0200</lastBuildDate><atom:link href="https://zaggash.github.io/tp-iut-docker/docker_linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Les Namespaces</title><link>https://zaggash.github.io/tp-iut-docker/docker_linux/namespaces/</link><pubDate>Sun, 14 Jun 2020 11:39:32 +0200</pubDate><guid>https://zaggash.github.io/tp-iut-docker/docker_linux/namespaces/</guid><description>Les Namespaces jouent un rôle important dans les conteneurs.
Ils permettent de placer les conteneurs dans leur propre vu du système et limitent ce que l&amp;rsquo;on peut faire et voir.
Il y a different type de namespaces:
pid net mnt uts ipc user Les namespaces font partie du Kernel et sont actifs dès le démarrage de l&amp;rsquo;OS.
Même sans l&amp;rsquo;utilisation des conteneurs, il y a au moins un namespace de chaque type qui contient tous les processus du système.</description></item><item><title>Les Réseaux</title><link>https://zaggash.github.io/tp-iut-docker/docker_linux/networks/</link><pubDate>Fri, 12 Jun 2020 23:23:40 +0200</pubDate><guid>https://zaggash.github.io/tp-iut-docker/docker_linux/networks/</guid><description>Le serveur Nginx Pour avoir accès au service web de nginx il va falloir exposer son port. Lancer l&amp;rsquo;image nginx du Dockerhub qui contient un serveur web basique.
$ docker run -d -p 8080:80 nginx Unable to find image &amp;#39;nginx:latest&amp;#39; locally latest: Pulling from library/nginx 8559a31e96f4: Pull complete 8d69e59170f7: Pull complete 3f9f1ec1d262: Pull complete d1f5ff4f210d: Pull complete 1e22bfa8652e: Pull complete Digest: sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133 Status: Downloaded newer image for nginx:latest 8fe2d550ac86b4bb6f544710f4f65ffcc0f4728a2cf52f5b8455e0112b284ce0 -p &amp;lt;ip&amp;gt;:8080:80 Ici on expose le port 80 du conteneur nginx sur le port 8080 de la VM</description></item><item><title>Les Volumes</title><link>https://zaggash.github.io/tp-iut-docker/docker_linux/volumes/</link><pubDate>Fri, 12 Jun 2020 23:23:40 +0200</pubDate><guid>https://zaggash.github.io/tp-iut-docker/docker_linux/volumes/</guid><description>Les volumes permettent plusieurs choses:
Passer outre le Copy On Write et utiliser les performances natives des disques. Partager des dossiers et fichiers entre les conteneurs Partager des dossiers et fichiers entre l&amp;rsquo;hôte et les conteneurs Utiliser des points de montage distant Nous allons voir comment utiliser un volume:
Dans un Dockerfile Au demarrage avec l&amp;rsquo;option -v En utilisant un volume nommé La persistance des données Illustrons l&amp;rsquo;état par défaut des données après l&amp;rsquo;arrêt d&amp;rsquo;un conteneur</description></item></channel></rss>